@{
    ViewData["Title"] = "ProductEdit";
}

<h1>ProductEdit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form action="" method="post">
            <div class="form-group">
                <label for="productId" class="control-label">Id</label>
                <input type="number" name="productId" id="productId" disabled class="form-control" />
            </div>
            <div class="form-group">
                <label for="productName" class="control-label">Name</label>
                <input type="text" name="productName" id="productName" class="form-control" />
            </div>
            <div class="form-group">
                <label for="weight" class="control-label">Weight</label>
                <input type="text" name="weight" id="weight" class="form-control" />
            </div>
            <div class="form-group">
                <label for="unitPrice" class="control-label">UnitPrice</label>
                <input type="text" name="unitPrice" id="unitPrice" class="form-control" />
            </div>
            <div class="form-group">
                <label for="unitsInStock" class="control-label">UnitsInStock</label>
                <input type="number" name="unitsInStock" id="unitsInStock" class="form-control" />
            </div>
            <div class="form-group">
                <label for="categoryId" class="control-label">CategoryId</label>
                <input type="number" name="categoryId" id="categoryId" class="form-control" />
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a href="../products">Back To List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        let searchParams = new URLSearchParams(window.location.search);
        const id = searchParams.get("id");
        app.products.getById(id).subscribe(
            (resp) => {
                $("input[name='productId']").val(resp.productId);
                $("input[name='productName']").val(resp.productName);
                $("input[name='weight']").val(resp.weight);
                $("input[name='unitPrice']").val(resp.unitPrice);
                $("input[name='unitsInStock']").val(resp.unitsInStock);
                $("input[name='categoryId']").val(resp.categoryId);
            }, (error) => {
                sweetAlert.toast.error("Internal Server Error!");
                console.error(error);
            }
        )

        const form = $("form");
        form.validate({
            onfocusout: false,
            onkeyup: false,
            onclick: false,
            errorClass: 'is-invalid',
            validClass: 'is-valid',
            rules: {
                "productName": {
                    required: true,
                },
                "weight": {
                    required: true,
                },
                "unitPrice": {
                    required: true,
                },
                "unitsInStock": {
                    required: true,
                },
                "categoryId": {
                    required: true,
                }
            }
        });

        form.submit(function (event) {
            event.preventDefault();
            if (form.valid()) {
                const payload = {
                    "productName": event.currentTarget[1].value,
                    "weight": event.currentTarget[2].value,
                    "unitPrice": event.currentTarget[3].value,
                    "unitsInStock": event.currentTarget[4].value,
                    "categoryId": event.currentTarget[5].value,
                }
                app.products.update(id, payload).subscribe(
                    (resp) => {
                        sweetAlert.toast.success("Edit product successfully!");
                        window.location.href = '../products';
                    }, (err) => {
                        sweetAlert.toast.error("Internal Server Error");
                        console.error(error);
                    }
                )
            }
        });

    </script>
}
